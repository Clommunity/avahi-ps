#!/bin/bash
#
# avahi-ps: Avahi Publicar i Buscar -
# Amb aquest script podem buscar i configurar els serveis que trovem per avahi.
# Tamb√© podem publicar nous serveis.

# General functions
avahi-ps-help() {
	cat <<EOF
Avahi - Publish and Search: System to publish avahi services or Search existents services.
Use: $0 publish|search|unpublish|info <options>

Use: $0 publish <describe> <type> <port> [txt]
       <describe>: Text describe service.
       <type>: Service type.
       <port>: Service port.
       <txt>: Other information, format 'attibute1=value1&attribute2=value2&...&attributeN=valueN'.

Use: $0 search [type] [hostname]

Use: $0 unpublish [type] [port]

Use: $0 info <variable>
       <variable>: informations ip, cloud, tincdev, communitydev.
EOF
	exit 0
}

filepath() {
	local _dir="$(dirname "$0")"
	echo $(cd "$_dir" && pwd)
}

# Start program
[[ $# -lt 1 ]] && avahi-ps-help

# Variables
FILE_PATH=$(filepath)
INSTALL_PATH="/usr/sbin"
INSTALL_PLUG_PATH="/usr/share/avahi-ps"
if [[ $FILE_PATH == $INSTALL_PATH ]]
then
	FILE_PATH="$INSTALL_PLUG_PATH"
fi
PLUG_DIR="$FILE_PATH/plugs/"
IPv="IPv4"

DATABASE="none"
PUBLIC_DEVICE="wlan0"
CLOUD_NAME="guifi"
DEVICE_NAME="${CLOUD_NAME}"
DEVICE_NAME="demo"
EXECUTE_IN="memory"
ERRORS_PLUG="errors"
SAVE_SERVICE="none"

GETINCONF_FILE=/etc/getinconf-client.conf

# Calculate Variables.

if [[ -f $GETINCONF_FILE ]]
then
	. $GETINCONF_FILE
	DEVICE_NAME="${NETWORK_NAME}"
	PUBLIC_DEVICE="${INTERNAL_DEV}"
fi

PUBLIC_IP=$(ip addr show dev $PUBLIC_DEVICE|grep "inet "|awk '{print $2}'|awk -F "/" {'print $1'})
FILENAME="avahi-ps-"
NODENAME=$(uname -n)
# PUBLIC_IP=$(ifconfig $PUBLIC_DEVICE|grep "inet "|awk '{print $2}'|awk -F ":" '{print $2}')

# Load plugins.
# Errors
if [[ ! -f ${PLUG_DIR}${FILENAME}${ERRORS_PLUG} ]]
then
	echo "Error, don't exist '${PLUG_DIR}${FILENAME}${ERRORS_PLUG}' plugs."
	exit
fi
. ${PLUG_DIR}${FILENAME}${ERRORS_PLUG}

# Execution
if [[ ! -f ${PLUG_DIR}${FILENAME}${EXECUTE_IN} ]]
then
	echo "Error, don't exist '${PLUG_DIR}${FILENAME}${EXECUTE_IN}' plugs."
	exit
fi
. ${PLUG_DIR}${FILENAME}${EXECUTE_IN}

if [[ -f ${PLUG_DIR}${FILENAME}${SAVE_SERVICE} ]]
	then
	. ${PLUG_DIR}${FILENAME}${SAVE_SERVICE}
fi

# Database
if [[ ! -f ${PLUG_DIR}${FILENAME}${DATABASE} ]]
then
	echo "Error, don't exist '${PLUG_DIR}${FILENAME}${DATABASE}' plugs."
	exit
fi
. ${PLUG_DIR}${FILENAME}${DATABASE}

# Publish
if [[ $1 == publish ]]
then
	shift
	publish_service "$@"

elif [[ $1 == search ]]
then
	shift
	search_service "$@"

elif [[ $1 == unpublish ]]
then
	shift
	unpublish_service "$@"

elif [[ $1 == info ]]
then
	case $2	in
		"ip")
			echo "$PUBLIC_IP"
			;;
		"cloud")
			echo "$CLOUD_NAME"
			;;
		"tincdev")
			echo "$DEVICE_NAME"
			;;
		"communitydev")
			echo "$PUBLIC_DEVICE"
			;;
	esac
fi

